Test-case 1:
1. start server
2. start client x(the table should be sent from server to x)
3. start client y(the table should be sent from server to x and y)
4. start client z(the table should be sent from server to x and y and z)
5. chat x -> y, y->z, ... , x ->z (All combinations)
6. dereg x (the table should be sent to y, z. x should receive ’ack’)
7. chat y->x (this should fail and message should be sent to server, and message has to be saved for x in the server)
8. chat z->x (same as above)
9. reg x (messages should be sent from server to x, x’s status has to be broadcasted to all the other clients)
10. x, y, z : exit

Test-case 2:
1. start server
2. start client x (the table should be sent from server to x )
3. start client y(the table should be sent from server to x and y)
4. dereg y
5. server exit
6. send message x-> y (will fail with both y and server, so should make 5 attempts and exit)

Test-case 3:
1. start server
2. start client x(the table should be sent from server to x)
3. start client y(the table should be sent from server to x and y)
4. start client x(the old x should be forced to logout)
5. chat x -> y, y->z, ... , x ->z (All combinations)
6. x, y : exit

Test-case 4:
1. start server
2. start client x (the table should be sent from server to x )
3. start client y(the table should be sent from server to x and y)
4. exit y by crtl-c (table will not update)
5. send message x-> y (this should fail and message should be sent to server, and message has to be saved for y in the server)
6. log in y on anoter IP address(y still get the offline messages from x)


